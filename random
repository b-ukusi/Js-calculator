class Calculator {
    constructor(previousOperandTextElement, currentOperandTextElement )
    {
        this.previousOperandTextElement = previousOperandTextElement
        this.currentOperandTextElement = currentOperandTextElement
        this. clear()
    }
    clear() {
        this.currentOperand=''
        this.previousOperand=''
        this.operation= undefined

    } 
    
     delete() {
    
    }
    
     appendNumber(number) {
        if( number ==='.'&& this.currentOperand.includes('.')) return
        this.currentOperand = this.currentOperand.toString() + number.toString() 
    }
    
     chooseOperation(operation) {
        this.operation = operation
        this.previousOperand = this.currentOperand
        this.currentOperand =''
    }
    compute(){

    }

    updateDispaly(){
        this.currentOperandTextElement.innerText = this.currentOperand
    }
    
}
 




const numberButtons = document.querySelectorAll('[data-number]')
const operationButtons = document.querySelectorAll('[data-operation]')
const equalsButtons = document.querySelector('[data-equals]')
const deleteButtons = document.querySelector('[data-delete]')
const allClaarButtons = document.querySelector('[data-all-clear]')
const previouseOperandTextElement = document.querySelector('[data-previous-operand]')
const currentOperandTextElement = document.querySelector('[data-current-operand]')

const calculator = new Calculator( previouseOperandTextElement, 
    currentOperandTextElement)

numberButtons.forEach( button => {
    button.addEventListener('click', () =>{
     calculator.appendNumber(button.innerText)
     calculator.updateDispaly()
    })
})

operationButtons.forEach( button => {
    button.addEventListener('click', () =>{
     calculator.chooseOperation(button.innerText)
     calculator.updateDispaly()
    })
})


two 
this.previousOperandTextElement.innerText = this.previousOperand
}